{
	"schema_version": "1.6.0",
	"id": "GHSA-9wv6-86v2-598j",
	"modified": "2024-09-09T21:45:57Z",
	"published": "2024-09-09T20:19:15Z",
	"aliases": [
		"CVE-2024-45296"
	],
	"summary": "path-to-regexp outputs backtracking regular expressions",
	"details": "### Impact\n\nIn certain cases, `path-to-regexp` will output a regular expression that can be exploited to cause poor performance.\n\n### Patches\n\nFor users of 0.1, upgrade to `0.1.10`. All other users should upgrade to `8.0.0`. \n\nVersion 0.1.10 adds backtracking protection when a custom regular expression is not provided, so it's still possible to manually create a ReDoS vulnerability if you are providing custom regular expressions.\n\nVersion 8.0.0 removes all features that can cause a ReDoS and stops exposing the regular expression directly.\n\n### Workarounds\n\nAll versions can be patched by providing a custom regular expression for parameters after the first in a single segment. As long as the custom regular expression does not match the text before the parameter, you will be safe. For example, change `/:a-:b` to `/:a-:b([^-/]+)`.\n\nIf paths cannot be rewritten and versions cannot be upgraded, another alternative is to limit the URL length. For example, halving the attack string improves performance by 4x faster.\n\n### Details\n\nBecause JavaScript is single threaded and regex matching runs on the main thread, poor performance will block the event loop and lead to a DoS. In local benchmarks, exploiting the unsafe regex will result in performance that is over 1000x worse than the safe regex. In a more realistic environment using Express v4 and 10 concurrent connections, this translated to average latency of ~600ms vs 1ms.\n\nThe bad regular expression is generated any time you have two parameters within a single segment, separated by something that is not a period (`.`). For example, `/:a-:b` will produce the regular expression `/^\\/([^\\/]+?)-([^\\/]+?)\\/?$/`. This can be exploited by a path such as `/a${'-a'.repeat(8_000)}/a`. [OWASP](https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS) has a good example of why this occurs, but the TL;DR is the `/a` at the end ensures this route would never match but due to naive backtracking it will still attempt every combination of the `:a-:b` on the repeated 8,000 `-a`.\n\n### References\n\n* [OWASP](https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS)\n* [Detailed blog post](https://blakeembrey.com/posts/2024-09-web-redos/)",
	"severity": [
		{
			"type": "CVSS_V3",
			"score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
		},
		{
			"type": "CVSS_V4",
			"score": "CVSS:4.0/AV:N/AC:L/AT:N/PR:N/UI:N/VC:N/VI:N/VA:H/SC:N/SI:N/SA:N/E:P"
		}
	],
	"affected": [
		{
			"package": {
				"ecosystem": "npm",
				"name": "path-to-regexp",
				"purl": "pkg:npm/path-to-regexp"
			},
			"ranges": [
				{
					"type": "SEMVER",
					"events": [
						{
							"introduced": "0"
						},
						{
							"fixed": "0.1.10"
						}
					]
				}
			],
			"database_specific": {
				"source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2024/09/GHSA-9wv6-86v2-598j/GHSA-9wv6-86v2-598j.json"
			}
		},
		{
			"package": {
				"ecosystem": "npm",
				"name": "path-to-regexp",
				"purl": "pkg:npm/path-to-regexp"
			},
			"ranges": [
				{
					"type": "SEMVER",
					"events": [
						{
							"introduced": "0.2.0"
						},
						{
							"fixed": "8.0.0"
						}
					]
				}
			],
			"database_specific": {
				"source": "https://github.com/github/advisory-database/blob/main/advisories/github-reviewed/2024/09/GHSA-9wv6-86v2-598j/GHSA-9wv6-86v2-598j.json"
			}
		}
	],
	"references": [
		{
			"type": "WEB",
			"url": "https://github.com/pillarjs/path-to-regexp/security/advisories/GHSA-9wv6-86v2-598j"
		},
		{
			"type": "ADVISORY",
			"url": "https://nvd.nist.gov/vuln/detail/CVE-2024-45296"
		},
		{
			"type": "WEB",
			"url": "https://github.com/pillarjs/path-to-regexp/commit/29b96b4a1de52824e1ca0f49a701183cc4ed476f"
		},
		{
			"type": "WEB",
			"url": "https://github.com/pillarjs/path-to-regexp/commit/60f2121e9b66b7b622cc01080df0aabda9eedee6"
		},
		{
			"type": "PACKAGE",
			"url": "https://github.com/pillarjs/path-to-regexp"
		}
	],
	"database_specific": {
		"cwe_ids": [
			"CWE-1333"
		],
		"github_reviewed": true,
		"github_reviewed_at": "2024-09-09T20:19:15Z",
		"nvd_published_at": "2024-09-09T19:15:13Z",
		"severity": "HIGH"
	}
}
